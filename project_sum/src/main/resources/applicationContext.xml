<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- base-package 설정위치 포함 하위 패키지 모두 검색 처리 
		여러개 선언해도 되고, 구분자(빈칸, 콤마, 세미콜른 등)-->
	<context:component-scan base-package="com.spring.ft.members" />
	<context:component-scan base-package="com.spring.ft.video" />
	<context:component-scan base-package="com.spring.ft.comments" />
	<context:component-scan base-package="com.spring.ft.sub" />
	<context:component-scan base-package="com.spring.ft.likes" />
	<context:component-scan base-package="com.spring.ft.qna" />
	
	
	<!-- 여러개 선언 방식 
	<context:component-scan base-package="com.spring.biz.board" />
	<context:component-scan base-package="com.spring.biz.user" />
	-->
	
	<!-- === Spring JDBC 관련 설정 === -->
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="url"      value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="FAKE_TUBE"/>
		<property name="password" value="ftpw"/>
	</bean>
	
	<!-- 스프링JDBC : JdbcTemplate 객체 생성 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- =============================== -->
	<!-- 스프링-마이바티스 연동 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mappings/**/*Mapper.xml"/>
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />		
	</bean>
	
	<!-- 이메일 인증 관련 빈 등록 -->	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="465" />
		<property name="username" value="본인이메일 입력" />
		<property name="password" value="본인 비밀번호 입력" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>
	
</beans>
