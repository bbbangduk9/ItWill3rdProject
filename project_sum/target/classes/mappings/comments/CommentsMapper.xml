<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commentsDAO"> 
	
	<!-- 내 채널 -->
	<select id="getMyCommentCount" parameterType="map" resultType="int">
		SELECT COUNT(*) 
		  FROM COMMENTS C, (SELECT VIDEOIDX FROM VIDEO WHERE UPPER(MEMBERID) LIKE UPPER(#{memberId})) V
		 WHERE C.VIDEOIDX = V.VIDEOIDX
		   AND CREGDATE BETWEEN TO_DATE(#{start_day}, 'YYYY-MM-DD') + 1 AND TO_DATE(#{end_day}, 'YYYY-MM-DD') + 1
	</select>

	<select id="getMyCommentCountOne" parameterType="map" resultType="int">
		SELECT COUNT(*) 
		  FROM COMMENTS C, (SELECT VIDEOIDX FROM VIDEO WHERE UPPER(MEMBERID) LIKE UPPER(#{memberId})) V
		 WHERE C.VIDEOIDX = V.VIDEOIDX
		   AND TO_CHAR(CREGDATE, 'YYYY-MM-DD') LIKE '%' || #{start_day} || '%' 
	</select>
	
	<select id="getMyChannelCommentsCount" resultType="int" parameterType="map">
		SELECT COUNT(*)
		  FROM (SELECT C.VIDEOIDX, (SELECT VTITLE 
		                              FROM VIDEO 
		                             WHERE VIDEOIDX = C.VIDEOIDX) VTITLE
		                         , C.MEMBERID, C.CREGDATE, C.COMMENTS, M.IMAGE, V.VIMAGE
		          FROM COMMENTS C, VIDEO V, MEMBERS M
		         WHERE C.VIDEOIDX = V.VIDEOIDX
		           AND UPPER(V.MEMBERID) LIKE  UPPER(#{memberId})
		           AND C.MEMBERID = M.MEMBERID
		           <if test="search_select == 'VTITLE'">
						AND VTITLE LIKE '%' || #{search_value} || '%'
				   </if>
				   <if test="search_select == 'CREGDATE'">
				   	 <choose>
						<when test="search_filter == 'ge'">
							AND CREGDATE <![CDATA[>=]]> TO_DATE(#{search_value})
						</when>
						<otherwise>
							AND CREGDATE <![CDATA[<=]]>	TO_DATE(#{search_value})
						</otherwise>
					 </choose>
				   </if>
				   <if test="search_select == 'MEMBERID'">
					   AND C.MEMBERID LIKE '%' || #{search_value} || '%'
				   </if>
				   <if test="search_select == 'COMMENTS'">
					   AND C.COMMENTS LIKE '%' || #{search_value} || '%'
				   </if>
			  )
	</select>

	<select id="getMyChannelCommentsList" resultType="comments" parameterType="map">
		SELECT *
		  FROM (SELECT ROWNUM AS RNUM, C.*
		          FROM (SELECT C.VIDEOIDX, (SELECT VTITLE 
		                                      FROM VIDEO 
		                                     WHERE VIDEOIDX = C.VIDEOIDX) VTITLE
		                     , C.MEMBERID, C.CREGDATE, C.COMMENTS, M.IMAGE, V.VIMAGE
		                  FROM COMMENTS C, VIDEO V, MEMBERS M
		                 WHERE C.VIDEOIDX = V.VIDEOIDX
		                   AND UPPER(V.MEMBERID) LIKE UPPER(#{memberId})
		                   AND C.MEMBERID = M.MEMBERID
		                   
		                   <if test="search_select == 'VTITLE'">
					  	   AND VTITLE LIKE '%' || #{search_value} || '%'
					 	   </if>
		                   <if test="search_select == 'CREGDATE'">
						 	<choose>
						 		<when test="search_filter == 'ge'">
								   AND CREGDATE <![CDATA[>=]]> TO_DATE(#{search_value})
							 	</when>
							 	<otherwise>
								   AND CREGDATE <![CDATA[<=]]> TO_DATE(#{search_value})
							 	</otherwise>
							 </choose>
							</if>
		                    <if test="search_select == 'MEMBERID'">
					  	    AND C.MEMBERID LIKE '%' || #{search_value} || '%'
					 	    </if>
		                    <if test="search_select == 'COMMENTS'">
					  	    AND C.COMMENTS LIKE '%' || #{search_value} || '%'
					 	    </if>
		                 ORDER BY C.CREGDATE DESC
		               ) C
		        )
		 WHERE RNUM BETWEEN #{begin} AND #{end}
	</select>
	<!-- ***************************************************** -->
	<!-- 댓글 -->
	<!-- 댓글 videoIdx값을 읽어서 게시물에 해당하는 videoIdx 값과 일치하는 목록 불러오는데 필요 -->
	<select id="viewComments" parameterType="comments" resultType="comments">
		SELECT *
		FROM COMMENTS
		WHERE VIDEOIDX = ${videoIdx }
		ORDER BY CREGDATE DESC
	</select>
	
	<!-- 댓글 등록에 필요 -->
	<insert id="insertComments" parameterType="comments">
		INSERT INTO COMMENTS (CREGDATE, COMMENTS, MEMBERID, VIDEOIDX, COMMENTIDX)
		VALUES (SYSDATE, #{comments}, #{memberId}, #{videoIdx}, (SELECT NVL(MAX(COMMENTIDX), 0) + 1 FROM COMMENTS))
	</insert>
	
	<!-- 댓글 삭제하는데 필요 -->
	<delete id="deleteComments" parameterType="comments">
		DELETE FROM COMMENTS WHERE COMMENTIDX = #{commentIdx}
	</delete>
	
	<!-- 댓글 업데이트 기능에 불러오는 데이터 처리하는데 필요 -->
	<select id="selectComment" parameterType="comments" resultType="comments">
		SELECT *
		FROM COMMENTS
		WHERE VIDEOIDX = ${videoIdx } AND COMMENTS = #{comments}
	</select>
	
	<!-- 댓글 수정하는데 필요 -->
	<update id="updateComment" parameterType="comments">
		UPDATE COMMENTS SET COMMENTS = #{comments} WHERE VIDEOIDX = #{videoIdx} AND COMMENTIDX = #{commentIdx}
	</update>
	
	
</mapper>